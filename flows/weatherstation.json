{
    "id": "7458f1be.a330f",
    "type": "subflow",
    "name": "NAMIB-Weatherstation",
    "info": "A weatherstation for the Web of Things. Performs discovery using CoAP and retrieves sensor data.",
    "category": "Web of Things",
    "in": [],
    "out": [],
    "env": [
        {
            "name": "USE_DISPLAY",
            "type": "bool",
            "value": "false"
        }
    ],
    "color": "#FFCC66",
    "icon": "font-awesome/fa-sun-o",
    "flow": [
        {
            "id": "883956a5.198d78",
            "type": "switch",
            "z": "a1a66a2f.73f348",
            "name": "Check USE_DISPLAY variable",
            "property": "USE_DISPLAY",
            "propertyType": "env",
            "rules": [
                {
                    "t": "true"
                }
            ],
            "checkall": "true",
            "repair": false,
            "outputs": 1,
            "x": 890,
            "y": 680,
            "wires": [
                [
                    "94977bb4.2da588"
                ]
            ]
        },
        {
            "id": "762598b0.bc2138",
            "type": "ui_button",
            "z": "a1a66a2f.73f348",
            "name": "",
            "group": "3aa5a87e.8fc0e",
            "order": 6,
            "width": 0,
            "height": 0,
            "passthru": true,
            "label": "Refresh Things from UI",
            "tooltip": "",
            "color": "",
            "bgcolor": "",
            "icon": "",
            "payload": "",
            "payloadType": "str",
            "topic": "topic",
            "topicType": "msg",
            "x": 470,
            "y": 300,
            "wires": [
                [
                    "116bbfff.bbea7",
                    "c360df2.3da792"
                ]
            ]
        },
        {
            "id": "1f7f43c3.a8663c",
            "type": "inject",
            "z": "a1a66a2f.73f348",
            "name": "Automatic Thing refresh",
            "props": [
                {
                    "p": "payload"
                },
                {
                    "p": "topic",
                    "vt": "str"
                }
            ],
            "repeat": "900",
            "crontab": "",
            "once": true,
            "onceDelay": "2",
            "topic": "",
            "payload": "",
            "payloadType": "str",
            "x": 190,
            "y": 300,
            "wires": [
                [
                    "762598b0.bc2138"
                ]
            ]
        },
        {
            "id": "6a31dbb7.5e8784",
            "type": "ui_chart",
            "z": "a1a66a2f.73f348",
            "name": "",
            "group": "c9175c00.15155",
            "order": 3,
            "width": 0,
            "height": 0,
            "label": "Luftfeuchtigkeit",
            "chartType": "line",
            "legend": "true",
            "xformat": "HH:mm:ss",
            "interpolate": "linear",
            "nodata": "",
            "dot": false,
            "ymin": "",
            "ymax": "",
            "removeOlder": 1,
            "removeOlderPoints": "",
            "removeOlderUnit": "3600",
            "cutout": 0,
            "useOneColor": false,
            "useUTC": false,
            "colors": [
                "#1f77b4",
                "#aec7e8",
                "#ff7f0e",
                "#2ca02c",
                "#98df8a",
                "#d62728",
                "#ff9896",
                "#9467bd",
                "#c5b0d5"
            ],
            "outputs": 1,
            "useDifferentColor": false,
            "x": 840,
            "y": 520,
            "wires": [
                []
            ]
        },
        {
            "id": "e6cf5efc.c51ee",
            "type": "ui_chart",
            "z": "a1a66a2f.73f348",
            "name": "",
            "group": "c9175c00.15155",
            "order": 3,
            "width": 0,
            "height": 0,
            "label": "Temperatur",
            "chartType": "line",
            "legend": "true",
            "xformat": "HH:mm:ss",
            "interpolate": "linear",
            "nodata": "",
            "dot": false,
            "ymin": "",
            "ymax": "",
            "removeOlder": 1,
            "removeOlderPoints": "",
            "removeOlderUnit": "3600",
            "cutout": 0,
            "useOneColor": false,
            "useUTC": false,
            "colors": [
                "#1f77b4",
                "#aec7e8",
                "#ff7f0e",
                "#2ca02c",
                "#98df8a",
                "#d62728",
                "#ff9896",
                "#9467bd",
                "#c5b0d5"
            ],
            "outputs": 1,
            "useDifferentColor": false,
            "x": 830,
            "y": 480,
            "wires": [
                []
            ]
        },
        {
            "id": "ba07006e.397fc",
            "type": "ui_table",
            "z": "a1a66a2f.73f348",
            "group": "3aa5a87e.8fc0e",
            "name": "Thing Table",
            "order": 1,
            "width": "24",
            "height": "18",
            "columns": [
                {
                    "field": "title",
                    "title": "Name",
                    "width": "",
                    "align": "left",
                    "formatter": "plaintext",
                    "formatterParams": {
                        "target": "_blank"
                    }
                },
                {
                    "field": "description",
                    "title": "Beschreibung",
                    "width": "",
                    "align": "left",
                    "formatter": "plaintext",
                    "formatterParams": {
                        "target": "_blank"
                    }
                }
            ],
            "outputs": 0,
            "cts": false,
            "x": 930,
            "y": 420,
            "wires": []
        },
        {
            "id": "6ab1d26d.88938c",
            "type": "ui_chart",
            "z": "a1a66a2f.73f348",
            "name": "",
            "group": "c9175c00.15155",
            "order": 3,
            "width": 0,
            "height": 0,
            "label": "Regen",
            "chartType": "line",
            "legend": "true",
            "xformat": "HH:mm:ss",
            "interpolate": "step",
            "nodata": "",
            "dot": false,
            "ymin": "0",
            "ymax": "1",
            "removeOlder": 1,
            "removeOlderPoints": "",
            "removeOlderUnit": "3600",
            "cutout": 0,
            "useOneColor": false,
            "useUTC": false,
            "colors": [
                "#1f77b4",
                "#aec7e8",
                "#ff7f0e",
                "#2ca02c",
                "#98df8a",
                "#d62728",
                "#ff9896",
                "#9467bd",
                "#c5b0d5"
            ],
            "outputs": 1,
            "useDifferentColor": false,
            "x": 1070,
            "y": 560,
            "wires": [
                []
            ]
        },
        {
            "id": "231bb1e8.36fb8e",
            "type": "function",
            "z": "a1a66a2f.73f348",
            "name": "Change boolean to int",
            "func": "if (msg.payload == false) {\n    msg.payload = 0;\n}\nelse {\n    msg.payload = 1;\n}\n\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "x": 860,
            "y": 560,
            "wires": [
                [
                    "6ab1d26d.88938c"
                ]
            ]
        },
        {
            "id": "bd27cde9.5deda",
            "type": "exec",
            "z": "a1a66a2f.73f348",
            "command": "python3 /home/pi/to_display.py",
            "addpay": "payload",
            "append": "",
            "useSpawn": "false",
            "timer": "",
            "oldrc": false,
            "name": "",
            "x": 1190,
            "y": 920,
            "wires": [
                [],
                [],
                []
            ]
        },
        {
            "id": "b176845e.e3f838",
            "type": "function",
            "z": "a1a66a2f.73f348",
            "name": "Create Table for Display",
            "func": "let cats = \"\";\nlet vals = \"\";\n\nlet data = global.get(\"display_data\");\nlet loc = \"\";\n\nif (typeof msg.loc !== \"undefined\") {\n    loc = msg.loc;\n}\n\nif (typeof msg.rain !== \"undefined\") {\n    name = \"Rain\";\n    unit = \"\";\n    value = msg.rain;\n}\nelse if (typeof msg.temperature !== \"undefined\") {\n    if (loc == \"\") {\n        name = \"Temperature\";\n    }\n    else {\n        name = \"T (\" + loc + \")\";\n    }\n    unit = \"Â°C\";\n    value = msg.temperature;\n}\nelse if (typeof msg.humidity !== \"undefined\") {\n    if (loc == \"\") {\n        name = \"Humidity\";\n    }\n    else {\n        name = \"Hum. (\" + loc + \")\";\n    }\n    unit = \"%\";\n    value = msg.humidity;\n}\n\nif (typeof name !== \"undefined\") {\n    data[name] = {\"val\": value, \"unit\": unit};\n    global.set(\"display_data\", data);\n}\n\nlet keys = Object.keys(data);\nfor (let s of keys) {\n    \n    val = data[s][\"val\"]\n    if (typeof val == \"boolean\")\n    {\n        if (val == true)\n        {\n            val = \"Yes\";\n        }\n        else\n        {\n            val = \"No\";\n        }\n    }\n    cats = cats + s + \":\" + \"\\n\";\n    vals = vals + val + data[s][\"unit\"] + \"\\n\";\n}\n\ntext = \"\\\"\" + cats + \"\\\" \\\"\" + vals + \"\\\"\";\nmsg = {};\nmsg.payload = text;\n\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 490,
            "y": 920,
            "wires": [
                [
                    "11ebce3c.631742"
                ]
            ]
        },
        {
            "id": "11ebce3c.631742",
            "type": "rbe",
            "z": "a1a66a2f.73f348",
            "name": "",
            "func": "rbe",
            "gap": "",
            "start": "",
            "inout": "out",
            "property": "payload",
            "x": 730,
            "y": 920,
            "wires": [
                [
                    "c2921ec4.5b77b"
                ]
            ]
        },
        {
            "id": "c2921ec4.5b77b",
            "type": "delay",
            "z": "a1a66a2f.73f348",
            "name": "",
            "pauseType": "rate",
            "timeout": "5",
            "timeoutUnits": "seconds",
            "rate": "1",
            "nbRateUnits": "8",
            "rateUnits": "second",
            "randomFirst": "1",
            "randomLast": "5",
            "randomUnits": "seconds",
            "drop": false,
            "x": 920,
            "y": 920,
            "wires": [
                [
                    "bd27cde9.5deda"
                ]
            ]
        },
        {
            "id": "5553230c.ffe1cc",
            "type": "wot-scripting",
            "z": "a1a66a2f.73f348",
            "name": "Read Temperature",
            "operationType": "readProperty",
            "affordanceName": "temperature",
            "affordanceType": "saref:temperature",
            "inputValue": "",
            "filterMode": "@type",
            "cacheMinutes": "",
            "outputVar": "temperature",
            "outputPayload": true,
            "outputVarType": "msg",
            "x": 570,
            "y": 620,
            "wires": [
                [
                    "883956a5.198d78",
                    "e6cf5efc.c51ee"
                ]
            ]
        },
        {
            "id": "476cc3a2.13fe6c",
            "type": "inject",
            "z": "a1a66a2f.73f348",
            "name": "Refresh values (every 20s)",
            "props": [
                {
                    "p": "payload"
                },
                {
                    "p": "topic",
                    "vt": "str"
                }
            ],
            "repeat": "20",
            "crontab": "",
            "once": true,
            "onceDelay": "6",
            "topic": "",
            "payload": "thingDescriptions",
            "payloadType": "flow",
            "x": 220,
            "y": 580,
            "wires": [
                [
                    "6c51b6fd.706cf8"
                ]
            ]
        },
        {
            "id": "6c51b6fd.706cf8",
            "type": "split",
            "z": "a1a66a2f.73f348",
            "name": "Turn TD map into individual messages",
            "splt": "\\n",
            "spltType": "str",
            "arraySplt": 1,
            "arraySpltType": "len",
            "stream": false,
            "addname": "id",
            "x": 250,
            "y": 640,
            "wires": [
                [
                    "4d1a8acd.02b994"
                ]
            ]
        },
        {
            "id": "4d1a8acd.02b994",
            "type": "change",
            "z": "a1a66a2f.73f348",
            "name": "Rearrange message properties",
            "rules": [
                {
                    "t": "set",
                    "p": "topic",
                    "pt": "msg",
                    "to": "payload.title",
                    "tot": "msg"
                },
                {
                    "t": "move",
                    "p": "payload",
                    "pt": "msg",
                    "to": "thingDescription",
                    "tot": "msg"
                },
                {
                    "t": "delete",
                    "p": "payload",
                    "pt": "msg"
                }
            ],
            "action": "",
            "property": "",
            "from": "",
            "to": "",
            "reg": false,
            "x": 270,
            "y": 700,
            "wires": [
                [
                    "5553230c.ffe1cc",
                    "a317e905.167318",
                    "68407703.b610f8"
                ]
            ]
        },
        {
            "id": "a317e905.167318",
            "type": "wot-scripting",
            "z": "a1a66a2f.73f348",
            "name": "Read Humidity",
            "operationType": "readProperty",
            "affordanceName": "humidity_value",
            "affordanceType": "saref:Humidity",
            "inputValue": "",
            "filterMode": "@type",
            "cacheMinutes": "",
            "outputVar": "humidity",
            "outputPayload": true,
            "outputVarType": "msg",
            "x": 560,
            "y": 680,
            "wires": [
                [
                    "883956a5.198d78",
                    "6a31dbb7.5e8784"
                ]
            ]
        },
        {
            "id": "116bbfff.bbea7",
            "type": "wot-discovery",
            "z": "a1a66a2f.73f348",
            "name": "Discover and save TDs in Context",
            "useCoap": true,
            "coapUseIPv6": true,
            "coapIPv6Address": "all",
            "coapUseIPv4": false,
            "coapIPv4Address": "all",
            "useMqtt": "",
            "mqttBrokerAddress": "",
            "timeoutRemoval": true,
            "removalTime": 15,
            "msgOrContext": "both",
            "msgProperty": "",
            "msgPropertyType": "msg",
            "contextVar": "",
            "contextVarType": "flow",
            "deleteExistingTDs": true,
            "coreURI": false,
            "tdURI": true,
            "useCoreRD": false,
            "coreRDUseIPv6": false,
            "coreRDUseIPv4": false,
            "x": 200,
            "y": 420,
            "wires": [
                [
                    "e5f926af.2459a8"
                ]
            ]
        },
        {
            "id": "e5f926af.2459a8",
            "type": "change",
            "z": "a1a66a2f.73f348",
            "name": "Get TDs from Context",
            "rules": [
                {
                    "t": "set",
                    "p": "payload",
                    "pt": "msg",
                    "to": "thingDescriptions",
                    "tot": "flow"
                }
            ],
            "action": "",
            "property": "",
            "from": "",
            "to": "",
            "reg": false,
            "x": 460,
            "y": 420,
            "wires": [
                [
                    "25363483.5bc26c"
                ]
            ]
        },
        {
            "id": "c360df2.3da792",
            "type": "change",
            "z": "a1a66a2f.73f348",
            "name": "Clear Table and Display Data",
            "rules": [
                {
                    "t": "set",
                    "p": "payload",
                    "pt": "msg",
                    "to": "[]",
                    "tot": "json"
                },
                {
                    "t": "set",
                    "p": "display_data",
                    "pt": "global",
                    "to": "{}",
                    "tot": "json"
                }
            ],
            "action": "",
            "property": "",
            "from": "",
            "to": "",
            "reg": false,
            "x": 800,
            "y": 300,
            "wires": [
                [
                    "ba07006e.397fc"
                ]
            ]
        },
        {
            "id": "68407703.b610f8",
            "type": "wot-scripting",
            "z": "a1a66a2f.73f348",
            "name": "Read Rain Value",
            "operationType": "readProperty",
            "affordanceName": "water_value",
            "affordanceType": "saref:Water",
            "inputValue": "",
            "filterMode": "@type",
            "cacheMinutes": "",
            "outputVar": "rain",
            "outputPayload": true,
            "outputVarType": "msg",
            "x": 570,
            "y": 740,
            "wires": [
                [
                    "883956a5.198d78",
                    "231bb1e8.36fb8e"
                ]
            ]
        },
        {
            "id": "25363483.5bc26c",
            "type": "function",
            "z": "a1a66a2f.73f348",
            "name": "Convert map of TDs to array",
            "func": "msg.payload = Object.values(msg.payload);\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "x": 700,
            "y": 420,
            "wires": [
                [
                    "ba07006e.397fc"
                ]
            ]
        },
        {
            "id": "94977bb4.2da588",
            "type": "wot-scripting",
            "z": "a1a66a2f.73f348",
            "name": "Read Location",
            "operationType": "readProperty",
            "affordanceName": "location",
            "affordanceType": "",
            "inputValue": "",
            "filterMode": "affordanceName",
            "cacheMinutes": "",
            "outputVar": "loc",
            "outputPayload": false,
            "outputVarType": "msg",
            "x": 240,
            "y": 920,
            "wires": [
                [
                    "b176845e.e3f838"
                ]
            ]
        },
        {
            "id": "3aa5a87e.8fc0e",
            "type": "ui_group",
            "name": "Control-Panel",
            "tab": "c2e5a8be.4d582",
            "order": 2,
            "disp": true,
            "width": "24",
            "collapse": false
        },
        {
            "id": "c9175c00.15155",
            "type": "ui_group",
            "name": "Monitor",
            "tab": "c2e5a8be.4d582",
            "order": 1,
            "disp": true,
            "width": "6",
            "collapse": false
        },
        {
            "id": "c2e5a8be.4d582",
            "type": "ui_tab",
            "name": "Weatherstation",
            "icon": "dashboard",
            "disabled": false,
            "hidden": false
        }
    ]
}
